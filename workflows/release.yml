name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            wix-file: main.wxs
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            wix-file: main-aarch64.wxs

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install WiX Toolset
      run: |
        choco install wixtoolset --version 3.14.0 --force
        echo "C:\Program Files (x86)\WiX Toolset v3.14\bin" >> $env:GITHUB_PATH
      shell: powershell
    
    - name: Install cargo-wix
      run: cargo install cargo-wix
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run tests
      run: cargo test --target ${{ matrix.target }}
    
    - name: Run clippy
      run: cargo clippy --target ${{ matrix.target }} -- -D warnings
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Setup WiX files for target
      run: |
        if ("${{ matrix.target }}" -eq "aarch64-pc-windows-msvc") {
          Remove-Item wix\main.wxs -ErrorAction SilentlyContinue
          Copy-Item wix\main-aarch64.wxs wix\main.wxs
        }
      shell: powershell
    
    - name: Create MSI installer
      run: cargo wix --target ${{ matrix.target }} --no-build --nocapture
    
    - name: Upload MSI artifact
      uses: actions/upload-artifact@v3
      with:
        name: tetris-synthwave-${{ matrix.target }}-msi
        path: target/wix/*.msi
        retention-days: 90

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tetris-synthwave-x86_64-pc-windows-msvc-msi/*.msi
          tetris-synthwave-aarch64-pc-windows-msvc-msi/*.msi
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
